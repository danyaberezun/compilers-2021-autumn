name: Regression

on: # [push]
  pull_request:
  # pull_request_target:
    types: [synchronize, opened, reopened, edited]

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    steps:
      - uses: actions/checkout@v2
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/head
      - name: Check branches compatibility
        run: |
          if [ "${{ github.base_ref }}" != "${{ github.head_ref }}" ]; then
             echo "FIASCO: base and head branches differs"
             exit 1
          fi
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: berezun/cw-2021:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Store Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Run tests
        run: |
          docker run -d -it --name cw-2021 -v $(pwd):/usr/share/compiler-workout berezun/cw-2021
          docker exec -t cw-2021 sh test.sh
          echo "All checks have successfully passed"
      - name: Check Deadline
        run: |
          deadline=2024-02-12T23:59
          if [[ $(date +'%Y-%m-%d') > $deadline ]];
          then
              echo "FIASCO: The deadline has expired"
              exit 1
          fi
      - name: Prepare results
        run: |
          login=${{ github.event.pull_request.user.login }}
          echo "$login" > gitid.txt
          echo ${{ github.base_ref }} > base.txt
          branch=${{ github.base_ref }}
          if [[ ${branch:1:1} -eq 0 ]]
          then
            echo ${branch:2:1} > assignment_number.txt
          else
            echo ${branch:1:2} > assignment_number.txt
          fi
      - name: Upload results
        uses: actions/upload-artifact@v2
        with:
          name: share_info
          path: |
            gitid.txt
            base.txt
            assignment_number.txt
