import List;
import State;

public fun evalBinOp(op, a, b) {
  case op of
    "+"  -> a + b
  | "-"  -> a - b
  | "*"  -> a * b
  | "/"  -> a / b
  | "%"  -> a % b
  | "<"  -> a < b
  | ">"  -> a > b
  | "<=" -> a <= b
  | ">=" -> a >= b
  | "==" -> a == b
  | "!=" -> a != b
  | "&&" -> a && b
  | "!!" -> a !! b
  esac
}

public fun evalExpr(st, expr) {
  case expr of
    Var (s) -> st(s) |
    Const (i) -> i |
    Binop (op, e1, e2) -> evalBinOp(op, evalExpr(st, e1), evalExpr(st, e2))
  esac
}