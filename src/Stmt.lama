-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
--
-- A statement is represented by a data structure of the following shape:
--
-- stmt = Assn   (string, expr)     |
--        Seq    (stmt, stmt)       |
--        Skip                      |
--        Read   (string)           |
--        Write  (expr)             |

fun eval ([q, t], stmt) {
  case stmt of
  Assn (name, expr) -> [q <- [name, evalExpr(q, expr)], t]
  | Seq (st1, st2) -> eval(eval([q, t], st1), st2)
  | Skip -> [q, t]
  | Read (name) -> 
    case readWorld(t) of
      [n, [input, output]] -> [q <- [name, n], [input, output]]
      esac
  | Write (expr) -> [q, writeWorld(evalExpr(q,expr), t)]
    esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}
