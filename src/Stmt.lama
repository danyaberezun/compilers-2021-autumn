-- Statement evaluator.

import State;
import Expr;
import World;


fun eval([state, world], stmt) {
    case stmt of
      Assn (name, expr) -> [state <- [name, evalExpr(state, expr)], world]
      | Seq (s1, s2) -> eval(eval([state, world], s1), s2)
      | Skip -> [state, world]
      | Read (name) -> case readWorld(world) of
         [value, new_world] -> [state <- [name, value], new_world]
       esac
      | Write (expr) -> [state, writeWorld(evalExpr(state, expr), world)]
    esac
}

public fun evalStmt(input, stmt) {
  eval([emptyState, createWorld(input)], stmt).snd.getOutput
}
