-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
--
-- A statement is represented by a data structure of the following shape:
--
-- stmt = Assn   (string, expr)     |
--        Seq    (stmt, stmt)       |
--        Skip                      |
--        Read   (string)           |
--        Write  (expr)             |

fun eval (c@[st, w], stmt) {
  case stmt of
    Assn  (x, expr)     -> [st <- [x, evalExpr (st, expr)], w]
  | Seq   (left, right) -> eval (eval(c, left), right)
  | Skip                -> c
  | Read  (x)           -> case readWorld (w) of [n, newW] -> [st <- [x, n], newW] esac
  | Write (expr)        -> case writeWorld (evalExpr (st, expr), w) of newW -> [st, newW] esac
  | _                   -> failure ("Uknown stmt: %s\n", stmt.string)
  esac
}

-- Evaluates a program with a given input and returns an output
public fun evalStmt (input, stmt) {
  eval ([emptyState, createWorld (input)], stmt).snd.getOutput
}

