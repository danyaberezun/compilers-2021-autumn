-- World: holds input-output streams

import List;

-- Creates a world; "input" is expected to be a
-- list of integers
public fun createWorld (input) {
  sprintf("createWorld\n");
  [input, {}]
}

-- Writes an output into a world
public fun writeWorld (n, [input, output]) {
  sprintf("writeWorld\n");
  [input, n:output]
}

-- Reads an input from a world; the result is
-- a pair --- the value read, the new world
public fun readWorld ([n:input, output]) {
  sprintf("readWorld\n");
  [n, [input, output]]
}

-- Gets an output from a world
public fun getOutput ([_, output]) {
  sprintf("getOutput\n");
  reverse (output)
}
