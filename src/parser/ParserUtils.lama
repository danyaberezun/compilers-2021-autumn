import Ostap;
import Fun;
import Lexer;

-- Signals an error; takes an error message and location info
public fun error (msg, loc) {
  failure ("%s at %d:%d\n", msg, loc.fst, loc.snd)
}

-- A parser of "something" in brackets; l, r are left and right
-- brackets as parsers, p --- a parser of "something"
public fun inbr (l, p, r) {
  syntax (-l p -r)
}

var lParens = memo $ eta (s ("("));
var rParens = memo $ eta (s (")"));
public fun parens (p) {
  inbr (lParens, p, rParens)
}

public comma = memo $ eta (s (","));
public semicolon = memo $ eta (s (";"));
