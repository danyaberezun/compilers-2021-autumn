import Array;

-- Compilation environment: generates labels
public fun makeCompEnv (n) {
  [fun () {
     [sprintf ("L%d", n), makeCompEnv (n+1)]
  }]
}

public fun initCompEnv () {
  makeCompEnv (0)
}

-- Accessor function: generates one label
public fun genLabel (env) {
  env [0] ()
}

-- Utility function: generates n labels
public fun genLabels (env, n) {
  fun inner (env, n) {
    if n == 0
    then {env}
    else case env.genLabel of
           [lab, env] -> lab : inner (env, n-1)
         esac
    fi
  }

  listArray (inner (env, n))
}
